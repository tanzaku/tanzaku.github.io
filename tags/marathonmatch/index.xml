<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MarathonMatch on tanzaku&#39;s blog</title>
    <link>https://tanzaku.github.io/tags/marathonmatch/</link>
    <description>Recent content in MarathonMatch on tanzaku&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 15 Nov 2020 17:50:13 +0900</lastBuildDate>
    
	<atom:link href="https://tanzaku.github.io/tags/marathonmatch/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HACK TO THE FUTURE 2021 予選</title>
      <link>https://tanzaku.github.io/post/hack_to_the_future_2021_qual/</link>
      <pubDate>Sun, 15 Nov 2020 17:50:13 +0900</pubDate>
      
      <guid>https://tanzaku.github.io/post/hack_to_the_future_2021_qual/</guid>
      <description>HACK TO THE FUTURE 2021 予選 - AtCoderに参加しました。結果は6位。ICPC国内予選の次の日だったのは不幸な事故（？）でしたが、問題はマラソン慣れしてない人も楽しめる内容でよかったです。
コンテスト開始 まずは問題を読み、自分の問題理解が正しいかどうか確認するために自明貪欲解を提出しました。それからしばらくは、方針を検討していました。
方針検討 この問題の大域最適解を想像すると、0から順にカードを拾いつつも途中でカードを再配置するような動きになるだろうと考えました。なので、まずはそのような解が得られるようにうまく最適化できないかというのを検討しました。しかし、実装が難しくなりそうだったのと焼きなましに落とし込んでも3秒では十分に最適化できなさそうだったので、一旦この方針は諦めて他の方針を考えました。
ビジュアライザの動きを観察していると、0から順に拾う動きが明らかに無駄が多いことがわかるので、初めにカードを収集して10x10のマスに配置してから全て拾い直すと方針が思いつきました。ただ、この方針で行くかどうかは悩みました。カードを拾い集めた後に一度置き最後に拾い直すという制約付きの解だと、どんなに頑張っても得られるスコアの上界がある程度決まってしまい、より大域最適解に近い構造の解を作る人には負けてしまいますし、後々方針転換するときにコードの大部分を捨てて書き直さないといけない可能性が高い（と思った）ので、この方針に決めた瞬間に負けが決まるリスクがあると考えたためです。
しかし、大域最適解に到達できるような方針で進めるとほぼ間違いなく爆死するし、大域最適解に到達できる方針は他に人にとっても難しいだろうと考えてこの方針で進めるようにしました。（決勝なら一位を目指す戦略をとるが、予選なのでリスクを取らなくていいかなという甘え）
実装 まずは全てのカードを拾う部分のみ最適化し、置く場所は左上から順に置いていくよう実装しました。拾う部分は露骨にtspなので焼きなまし（2-opt）で最適化し、改善することを確認。
その後拾ったカードを置く場所を焼きなまして改善しました。置く場所については、初めは2-optの近傍で焼き鈍してましたが、後に2点swapの近傍にすることで大幅に改善しました。（なぜ2-opt的な近傍よりも2点swapがいいのかはわかりません。悲しい）
大筋の実装はこれで終わりです。
細かい改善 初めは中央の10x10のマスに置くようにしていましたが、実験したところ右下の10x10の方がスコアが良かったので変更しました。
カードを置くますを10x10の制限を11x11に緩和しました。これは構築する解の制約を緩くする変更で（焼きなまし法の試行回数が十分あれば）スコアが悪くなることはないので、この緩和は自然な発想だと思います。とはいえ20x20に緩和してしまうと焼きなまし法の試行回数が足りなそうだし、11x11のヴィジュアライズ結果を見ると12x12以上に緩和しても改善の余地があまりなさそうなのでそれ以上の修正はしませんでした。
最後に0から順にカードを集める際に、途中でカードを拾い別の場所に置き直すと良くなるだろうというのは自然な発想です。実装は重いですが気合いで焼き鈍しました。
感想 方針決定後は自然な改善の積み重ねが多かったので、方針決定するまでが勝負の分かれ目でした。</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>機械学習 on tanzaku&#39;s blog</title>
    <link>https://tanzaku.github.io/tags/%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92/</link>
    <description>Recent content in 機械学習 on tanzaku&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 15 Aug 2020 21:48:39 +0900</lastBuildDate>
    
	<atom:link href="https://tanzaku.github.io/tags/%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PyTorchで学習した結果をC&#43;&#43;から利用する(Linearレイヤーのみ)</title>
      <link>https://tanzaku.github.io/post/learn-pytorch-use-c&#43;&#43;/</link>
      <pubDate>Sat, 15 Aug 2020 21:48:39 +0900</pubDate>
      
      <guid>https://tanzaku.github.io/post/learn-pytorch-use-c&#43;&#43;/</guid>
      <description>C++で作成したCPUで動作する麻雀AIに、機械学習モデルを組み込みたいなと思い調査しました。
本記事ではLinear — PyTorch 1.6.0 documentationを使ったモデルで学習し、そのパラメータ(A,b)をC++で使用する方法を書きます。
パラメータのファイルへの出力 Linear型のAはweightというTensor型の変数になっており、bはbiasというTensor型の変数になっています。 下記のようにするとTensor型のA,bからnumpyの生のデータを取り出しバイナリに出力することができる。
with open(&amp;#39;data/weight_row=16_col=32.bin&amp;#39;, mode=&amp;#39;wb&amp;#39;) as f: x = net.linear1.weight.to(&amp;#39;cpu&amp;#39;).detach().numpy() x.tofile(f) x = net.linear1.bias.to(&amp;#39;cpu&amp;#39;).detach().numpy() x.tofile(f) C++からの利用 この時Aのバイナリ中の要素の並びは下図のようになっているので、あとは普通にC++からバイナリファイルを読み込んで使用すれば良い(詳しくはここを参照ください)</description>
    </item>
    
  </channel>
</rss>